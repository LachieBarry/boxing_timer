<button id="start" type="button">Start!</button>
<button id="pause" type="button">Pause!</button>

<div><p id="round"> </p></div>
<div><p id="combo"> </p></div>
<div><p id="phase"> </p></div>
<div><p id="timer"> </p></div>
<div><p id="progress"> </p></div>

<script>
const allRounds = <%= raw @rounds.to_json %>;
const roundDisplay = document.querySelector("#round");
const timerDisplay = document.querySelector("#timer");
const phaseDisplay = document.querySelector("#phase");
const comboDisplay = document.querySelector("#combo");
const progressDisplay = document.querySelector("#progress");

const startButton = document.querySelector("#start");
const pauseButton = document.querySelector("#pause");
</script>

<script>

function runRound(roundIndex, phase) {
  const round = allRounds[roundIndex];



  let count = (phase === 'work') ? round.work_time * 100 : round.rest_time * 100;

  const timer = setInterval(function() {
    let progress = (phase === 'work') ? (count / round.work_time).toFixed(2) : (count / round.rest_time).toFixed(2);
    let currentRound = round

    count--;
    comboDisplay.innerText = round.combo;
    phaseDisplay.innerText = phase;
    timerDisplay.innerText = (count / 100).toFixed(2);
    progressDisplay.innerText = `${progress}%`;


    console.log(progress)
    console.log(count)
    console.log(round.work_time * 100)

    if (count === 0) {
      clearInterval(timer);
      console.log(`Time's up for ${phase} phase!`);

      // Move to the next phase or round if available
      if (phase === 'work') {
        if (roundIndex !== allRounds.length - 1) {
        setTimeout(() => runRound(roundIndex, 'rest'), 10); // Start resting after 1000ms (adjust as needed)
        }
      } else {
        if (roundIndex < allRounds.length - 1) {
          setTimeout(() => runRound(roundIndex + 1, 'work'), 10); // Start working after 1000ms (adjust as needed)
        }
      }
    }
    pauseButton.addEventListener("click", (event) => {
      console.log("clicked");
      clearInterval(timer);
      console.log("done");
    });

  }, 10);

  function pauseRound() {
  // clearInterval
  // save value in the timer
  // save phase



  // change display to paused + the stored time
  };
}

function pauseRound() {
  // clearInterval
  // save value in the timer
  // save phase
  clearInterval(timer)
  let savedPhase = phaseDisplay.innerText
  let savedCount = timerDisplay.innerText
  console.log(round)

  // change display to paused + the stored time
}

function resumeRound(roundIndex, phase, pausedTime) {
// run one interval with pausedTime
// start timers + phase from where
// >> runTimer function and pass the next phase and round index!
}

// Start the first working timer
runRound(0, 'work');

</script>
          <%# const comboNames = new Array() %>

      <%# <% @rounds.each do |round| %>
        <%# comboNames.push( <%= round.combo %>
      <%# <% end %>
